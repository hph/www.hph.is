#!/usr/bin/env node
'use strict';

require('babel-register', { cache: false });

const webpack = require('webpack');
const { fork } = require('child_process');

const { default: clientConfig } = require('../cfg/webpack-client-config.babel.js');
const { default: serverConfig } = require('../cfg/webpack-server-config.babel.js');

const client = webpack(clientConfig);
const server = webpack(serverConfig);

let lastProcessId;
client.watch(null, (error, { startTime, endTime }) => {
  if (error) {
    console.log(error);
  } else {
    console.log(`Client built in ${endTime - startTime}ms`);
  }

  server.run((error, { startTime, endTime }) => {
    if (error) {
      console.log(error);
      return;
    }
    console.log(`Server built in ${endTime - startTime}ms`);

    if (lastProcessId) {
      process.kill(lastProcessId);
      console.log('Restarting server...');
    } else {
      console.log('Starting server...');
    }
    lastProcessId = fork('./bin/serve').pid;
  });
});
